
;; Function main (main, funcdef_no=1988, decl_uid=49708, cgraph_uid=456, symbol_order=493)

Creating trace 0 : start at note 1
Creating trace 1 : start at note 61
Creating trace 2 : start at code_label 23
Creating trace 3 : start at code_label 20
Creating trace 4 : start at code_label 49
Creating trace 5 : start at note 62
Processing trace 0 : start at note 1
   saw edge from trace 0 to 1 (via fallthru 0)
	push trace 1 to worklist
Processing trace 1 : start at note 61
   saw edge from trace 1 to 3 (via jump_insn 55)
	push trace 3 to worklist
Processing trace 3 : start at code_label 20
   saw edge from trace 3 to 2 (via jump_insn 25)
	push trace 2 to worklist
   saw edge from trace 3 to 4 (via jump_insn 46)
	push trace 4 to worklist
Processing trace 4 : start at code_label 49
   saw edge from trace 4 to 5 (via fallthru 0)
	push trace 5 to worklist
Processing trace 5 : start at note 62
Processing trace 2 : start at code_label 23
   saw edge from trace 2 to 3 (via fallthru 0)


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={14d,10u} r1={7d,1u} r2={5d} r4={8d,3u} r5={8d,3u} r6={3d,23u} r7={4d,16u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={10d,2u} r18={4d} r19={1d,1u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 373{314d,59u,0e} in 35{31 regular + 4 call} insns.
(note 1 0 67 NOTE_INSN_DELETED)
(insn 67 1 4 2 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_NOP_ENDBR) 1465 {nop_endbr}
     (nil))
(note 4 67 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 4 68 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) "factorial.cpp":4:1 56 {*pushdi2_rex64}
     (nil))
(note 68 58 69 2
	.cfi_def_cfa_offset 16
	 NOTE_INSN_CFI)
(note 69 68 59 2
	.cfi_offset 6, -16
	 NOTE_INSN_CFI)
(insn/f 59 69 70 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) "factorial.cpp":4:1 82 {*movdi_internal}
     (nil))
(note 70 59 60 2
	.cfi_def_cfa_register 6
	 NOTE_INSN_CFI)
(insn/f 60 70 61 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "factorial.cpp":4:1 1364 {pro_epilogue_adjust_stack_add_di}
     (nil))
(note 61 60 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 61 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 66 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [4 D.53841+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [95])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "factorial.cpp":4:1 1382 {stack_protect_set_1_di}
     (nil))
(insn 66 3 7 2 (set (reg:DI 0 ax [86])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -20 [0xffffffffffffffec]))) "factorial.cpp":6:9 241 {*leadi}
     (nil))
(insn 7 66 8 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [86])) "factorial.cpp":6:9 82 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 0 ax [87])
        (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f23e54a1870 cin>)) "factorial.cpp":6:9 82 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [87])) "factorial.cpp":6:9 82 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt3cin") [flags 0x40]  <var_decl 0x7f23e54a1870 cin>)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSirsERi") [flags 0x41]  <function_decl 0x7f23e53f8400 operator>>>) [0 operator>> S1 A8])
            (const_int 0 [0]))) "factorial.cpp":6:9 1013 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [5 i+0 S4 A64])
        (const_int 2 [0x2])) "factorial.cpp":7:4 83 {*movsi_internal}
     (nil))
(insn 12 11 55 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [5 f+0 S4 A32])
        (const_int 1 [0x1])) "factorial.cpp":8:4 83 {*movsi_internal}
     (nil))
(jump_insn 55 12 56 2 (set (pc)
        (label_ref 20)) "factorial.cpp":9:2 996 {jump}
     (nil)
 -> 20)
(barrier 56 55 23)
(code_label 23 56 15 3 3 (nil) [1 uses])
(note 15 23 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:SI 0 ax [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [5 f+0 S4 A32])) "factorial.cpp":11:5 83 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:SI 0 ax [88])
                (mult:SI (reg:SI 0 ax [89])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [5 i+0 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) "factorial.cpp":11:5 469 {*mulsi3_1}
     (nil))
(insn 18 17 19 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [5 f+0 S4 A32])
        (reg:SI 0 ax [88])) "factorial.cpp":11:5 83 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [5 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [5 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "factorial.cpp":12:5 246 {*addsi_1}
     (nil))
(code_label 20 19 21 4 2 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 24 4 (set (reg:SI 0 ax [orig:82 n.0_1 ] [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [5 n+0 S4 A32])) "factorial.cpp":9:11 83 {*movsi_internal}
     (nil))
(insn 24 22 25 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [5 i+0 S4 A64])
            (reg:SI 0 ax [orig:82 n.0_1 ] [82]))) "factorial.cpp":9:11 11 {*cmpsi_1}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "factorial.cpp":9:11 995 {*jcc}
     (nil)
 -> 23)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:SI 0 ax [90])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [5 f+0 S4 A32])) "factorial.cpp":14:10 83 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:SI 4 si)
        (reg:SI 0 ax [90])) "factorial.cpp":14:10 83 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:DI 0 ax [91])
        (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f23e54a1990 cout>)) "factorial.cpp":14:10 82 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [91])) "factorial.cpp":14:10 82 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4cout") [flags 0x40]  <var_decl 0x7f23e54a1990 cout>)
        (nil)))
(call_insn 31 30 33 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41]  <function_decl 0x7f23e5780600 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "factorial.cpp":14:10 1013 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 33 31 35 5 (set (reg:DI 1 dx [93])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f23e578f700 endl>)
                    ] UNSPEC_GOTPCREL)) [24  S8 A8])) "factorial.cpp":14:15 discrim 1 82 {*movdi_internal}
     (nil))
(insn 35 33 36 5 (set (reg:DI 4 si)
        (reg:DI 1 dx [92])) "factorial.cpp":14:15 discrim 1 82 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41]  <function_decl 0x7f23e578f700 endl>)
        (nil)))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "factorial.cpp":14:15 discrim 1 82 {*movdi_internal}
     (nil))
(call_insn 37 36 38 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEPFRSoS_E") [flags 0x41]  <function_decl 0x7f23e576f400 operator<<>) [0 operator<< S1 A8])
            (const_int 0 [0]))) "factorial.cpp":14:15 discrim 1 1013 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 38 37 45 5 (set (reg:SI 0 ax [orig:84 _13 ] [84])
        (const_int 0 [0])) "factorial.cpp":15:12 83 {*movsi_internal}
     (nil))
(insn 45 38 46 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [4 D.53841+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 1 dx [96]))
        ]) "factorial.cpp":16:1 1387 {stack_protect_test_1_di}
     (nil))
(jump_insn 46 45 53 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "factorial.cpp":16:1 995 {*jcc}
     (nil)
 -> 49)
(note 53 46 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 47 53 48 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f23e539ba00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "factorial.cpp":16:1 1002 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 48 47 49)
(code_label 49 48 54 7 5 (nil) [1 uses])
(note 54 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 54 62 7 (use (reg/i:SI 0 ax)) "factorial.cpp":16:1 -1
     (nil))
(note 62 51 63 7 NOTE_INSN_EPILOGUE_BEG)
(insn/f 63 62 71 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int 8 [0x8])))
            (set (reg/f:DI 6 bp)
                (mem:DI (reg/f:DI 6 bp) [0  S8 A8]))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "factorial.cpp":16:1 1042 {*leave_rex64}
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(note 71 63 64 7
	.cfi_def_cfa 7, 8
	 NOTE_INSN_CFI)
(jump_insn 64 71 65 7 (simple_return) "factorial.cpp":16:1 1026 {simple_return_internal}
     (nil)
 -> simple_return)
(barrier 65 64 57)
(note 57 65 0 NOTE_INSN_DELETED)
