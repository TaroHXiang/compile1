const int MAXN = 100;
int sum(int n, int a[]) {
    int s, i;
    s = 0; i = 0;
    while (i < n) {
        s = s + a[i];
        i = i + 1;
    }
    return s;
}
int count_gt_even(int n, int a[], int t) {
    int i, cnt;
    i = 0; cnt = 0;
    while (i < n) {
        if ((a[i] > t) && (a[i] % 2 == 0)) {  
            cnt = cnt + 1;
        }
        i = i + 1;
    }
    return cnt;
}
void sort(int n, int a[]) {
    int i, j, swapped, tmp;
    i = 0;
    while (i < n - 1) {
        swapped = 0;
        j = 0;
        while (j < n - 1 - i) {
            if (a[j] <= a[j + 1]) {  
                j = j + 1;
                continue;
            }
            tmp = a[j];
            a[j] = a[j + 1];
            a[j + 1] = tmp;
            swapped = 1;
            j = j + 1;
        }
        if (swapped == 0) {  
            break;
        }
        i = i + 1;
    }
}
int read(int arr[]) {
    int n;
    n = getarray(arr);           
    if (n <= 0) {
        putf("输入的个数 n 非法: %d\n", n);
        return 0;
    }
    if (n > MAXN) {            
        putf("n=%d 超过上限 %d，将被截断\n", n, MAXN);
        n = MAXN;
    }
    return n;
}
int main() {
    int arr[MAXN];
    int n, s, mode, t;
    n = read(arr);
    if (n == 0) {
        putf("无有效数据，退出。\n");
        return 0;
    }
    s = sum(n, arr);
    float avg;
    avg = (1.0 * s) / n;
    putf("平均值 = %f\n", avg);
    mode = getint();
    if (mode == 1) {
        int i, mx;
        i = 0; mx = arr[0];
        while (i < n) {
            if (arr[i] > mx) { mx = arr[i]; }
            i = i + 1;
        }
        putf("最大值 = %d\n", mx);
    } else if (mode == 2) {
        starttime();
        sort(n, arr);
        stoptime();
        if (n % 2 == 1) {
            putf("中位数 = %f\n", 1.0 * arr[n / 2]);
        } else {
            float med;
            med = 0.5 * (arr[n / 2 - 1] + arr[n / 2]);
            putf("中位数 = %f\n", med);
        }
    } else if (mode == 3) {
        putf("输入阈值 t: ");
        t = getint();
        int cnt;
        cnt = count_gt_even(n, arr, t);
        putf("满足(> %d 且为偶数)的个数 = %d\n", t, cnt);
    } else {
        putf("模式 %d 未定义，结束。\n", mode);
    }
    putf("当前数组(可能已排序)：\n");
    putarray(n, arr);
    putch(10);
    return 0;
}